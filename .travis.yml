dist: xenial

language: rust

addons:
  apt:
    packages:
    - cmake
  snaps:
  - name: snapcraft
    classic: true

env:
  - ARCHITECTURE=amd64 BRANCH=master CHANNEL=edge
  - ARCHITECTURE=amd64 BRANCH=beta CHANNEL=beta
  - ARCHITECTURE=amd64 BRANCH=stable CHANNEL=candidate
  - ARCHITECTURE=i386 BRANCH=master CHANNEL=edge
  - ARCHITECTURE=i386 BRANCH=beta CHANNEL=beta
  - ARCHITECTURE=i386 BRANCH=stable CHANNEL=candidate
  - ARCHITECTURE=armhf BRANCH=master CHANNEL=edge
  - ARCHITECTURE=armhf BRANCH=beta CHANNEL=beta
  - ARCHITECTURE=armhf BRANCH=stable CHANNEL=candidate
  - ARCHITECTURE=arm64 BRANCH=master CHANNEL=edge
  - ARCHITECTURE=arm64 BRANCH=beta CHANNEL=beta
  - ARCHITECTURE=arm64 BRANCH=stable CHANNEL=candidate

script:
  # Decrypt the login credentials.
  - openssl aes-256-cbc -K $encrypted_6f2c54a3a0c1_key -iv $encrypted_6f2c54a3a0c1_iv -in snapcraft-login.enc -out snapcraft-login -d
  - snapcraft login --with snapcraft-login
  - ./scripts/is_released $ARCHITECTURE $BRANCH $CHANNEL
  - |
    if [ "$?" = "0" ]; then
      travis_terminate 0
    fi
  - /snap/bin/snapcraft clean
#  - sed -i "0,/source-tag/s/source-tag:.*$/source-tag: '"$BRANCH"'/g" snapcraft.yaml
  - travis_wait 50 /snap/bin/snapcraft --target-arch $ARCHITECTURE
  # Test the installation. The host is amd64 so that's the only one
  # installable.
  - |
    if [ "$ARCHITECTURE" = "amd64" ]; then
      sudo snap install *.snap --dangerous
    fi
  # Publish to the snap store channel.
  - |
    if [ "$TRAVIS_BRANCH" = "master" ] && [ "$TRAVIS_EVENT_TYPE" != "pull_request" ]; then
      snapcraft push *.snap --release $CHANNEL
    fi
